package com.sheshu;

import java.util.Arrays;
import java.util.HashSet;

public class Sep13 {
	static void printOneDigitUntill(int num) {
		int sum=0;
		while(num>0) {
			int rem=num%10;
			sum+=rem;
			num=num/10;
		}
		if(sum<10) {
			System.out.println("The Sum of the Digit "+sum);
		}
	}
	static void Sort(int a[]) {
		int n=a.length;
		for(int i=0;i<n;i++) {
			for(int j=0;j<n-i-1;j++) {
				if(a[j]>a[j+1]) {
					int temp=a[j];
					a[j]=a[j+1];
					a[j+1]=temp;
				}
			}
			System.out.println(Arrays.toString(a));
			
		}
		System.out.println("Final Sorted Array "+Arrays.toString(a));
	}
	static void mergeSort(int a1[],int a2[]) {
		int res[]=new int[a1.length+a2.length];
		int i=0,j=0,k=0;
		while(i<a1.length && j<a2.length) {
			if(a1[i]>a2[j]) {
				res[k++]=a1[i++];
			}
			else {
				res[k++]=a2[j++];
			}
		}
		
		while(i<a1.length) {
			res[k++]=a1[i++];
		}
		
		while(j<a2.length) {
			res[k++]=a1[j++];
		}
		Arrays.sort(res);
		
		HashSet<Integer>set=new HashSet<>();
		for(int a234:res) {
//			System.out.println(a234);
			set.add(a234);
		}
		System.out.println(set);
//		System.out.println("MergeSort "+Arrays.toString());
	}
	public static void main(String[] args) {
		int num=116;
		printOneDigitUntill(num);
		int a1[]= {2,1,5,3,1};
		int a2[]= {5,1,3,4,5,6};
//		Sort(a);
		mergeSort(a1,a2);
	}
}
